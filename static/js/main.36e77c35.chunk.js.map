{"version":3,"sources":["components/BottomBar.js","components/Header.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["BottomBar","setTodos","getId","setNewId","inputRef","useRef","handleAddTodo","name","current","value","trim","prev","id","complete","className","type","placeholder","ref","onKeyUp","e","key","onClick","Header","deleteCheckedTodos","Todo","todo","toggleTodo","checkRef","useState","textDecoration","nameStyle","setNameStyle","useEffect","setStyles","checked","onChange","style","TodoList","todos","todoListRef","paddingRight","listStyle","setListStyle","scrollHeight","clientHeight","map","showTodos","App","JSON","parse","localStorage","getItem","height","window","innerHeight","contentStyle","setContentStyle","setItem","stringify","addEventListener","innerWidth","newTodos","filter","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36e77c35.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\n\r\nconst BottomBar = ({ setTodos, getId, setNewId}) => {\r\n\r\n    const inputRef = useRef()\r\n    \r\n    const handleAddTodo = () => {\r\n        const name = inputRef.current.value.trim();\r\n        if(name === \"\") return\r\n        setNewId()\r\n        setTodos(prev => [...prev, {id: getId(), name: name, complete: false}])\r\n        inputRef.current.value = null\r\n    }\r\n\r\n    return (\r\n        <div className=\"bottom-bar\">\r\n            <input  className=\"bottom-bar__input\" \r\n                    type=\"text\" \r\n                    placeholder=\"Type your todo here\" \r\n                    ref={inputRef} \r\n                    onKeyUp={(e) => {\r\n                        if(e.key === 'Enter'){\r\n                            handleAddTodo()\r\n                        }\r\n                    }}/>\r\n            <button className=\"bottom-bar__btn\" onClick={() => {handleAddTodo()}}>\r\n                <span className=\"add-line\"></span>\r\n                <span className=\"add-line\"></span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BottomBar\r\n","import React from 'react'\r\n\r\nconst Header = ({ setTodos, deleteCheckedTodos }) => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__h1\">To do:</h1>\r\n            <button className=\"header__btn\" onClick={deleteCheckedTodos}>Clear checked</button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useRef, useState, useEffect } from 'react'\r\n\r\nconst Todo = ({ todo,  toggleTodo }) => {\r\n\r\n    const checkRef = useRef()\r\n    const [nameStyle, setNameStyle] = useState({textDecoration: \"none\"})\r\n\r\n    useEffect(() => {\r\n        setStyles()\r\n    }, [])\r\n\r\n    const setStyles = () => {\r\n        if(checkRef.current.checked) \r\n            setNameStyle({textDecoration: \"line-through\"})\r\n        else \r\n            setNameStyle({textDecoration: \"none\"})\r\n    }\r\n\r\n    const handleCheck = () => {\r\n        setStyles()\r\n        toggleTodo(todo.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <input className=\"todo__check\" type=\"checkbox\"checked={todo.complete} onChange={handleCheck} ref={checkRef} />\r\n            <p className=\"todo__name\" style={nameStyle}>{todo.name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo}) => {\r\n\r\n    const todoListRef = useRef()\r\n    const [listStyle, setListStyle] = useState({paddingRight: 0})\r\n\r\n    useEffect(() => {\r\n        if(todoListRef.current.scrollHeight > todoListRef.current.clientHeight){\r\n            setListStyle({paddingRight: 10+\"px\"})\r\n        } else {\r\n            setListStyle({paddingRight: 0})\r\n        }\r\n    }, [todos])\r\n\r\n    const showTodos = () => {\r\n        if(todos) {\r\n            let newArr = todos.map(todo => {\r\n                return <Todo todo={todo} key={todo.name + \"_\"+ todo.id} toggleTodo={toggleTodo}/>\r\n            }) \r\n            return newArr\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-list\" style={listStyle} ref={todoListRef}>\r\n            {showTodos()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import { useState, useEffect } from \"react\"\n\nimport \"./assets/css/App.css\"\nimport BottomBar from \"./components/BottomBar\"\nimport Header from \"./components/Header\"\n\nimport TodoList from \"./components/TodoList\"\n\nfunction App() {\n\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem(\"todos\")) || [])\n  const [contentStyle, setContentStyle] = useState({height: window.innerHeight*0.8 + \"px\"})\n\n  useEffect(() => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos))\n  }, [todos])\n\n  const setNewId = () => {\n    let id = getId()\n    id = id+1\n    localStorage.setItem(\"id\", JSON.stringify(id))\n  }\n\n  const getId = () => {\n    return JSON.parse(localStorage.getItem(\"id\")) || 0\n  }\n\n  const toggleTodo = (id) => {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  const deleteCheckedTodos = () => {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  const handleWindowResize = (e) => {\n    if(window.innerWidth <= 768){\n      setContentStyle({height: window.innerHeight*0.9+\"px\"})\n    } else {\n      setContentStyle({height: window.innerHeight*0.8 + \"px\"})\n    }\n  }\n\n  window.addEventListener(\"resize\", handleWindowResize)\n\n  return (\n    <div className=\"content\" style={contentStyle}>\n      <Header setTodos={setTodos} deleteCheckedTodos={deleteCheckedTodos}/>\n      <TodoList todos={todos} toggleTodo={toggleTodo}/>\n      <BottomBar setTodos={setTodos} getId={getId} setNewId={setNewId}/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}